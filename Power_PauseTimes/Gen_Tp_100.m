syms x y c_min c_max m_max m_min d1 d2 pause_prob;
syms a b r d d_b m c;
v = 1.5;

if (v == 1)
    importfile('tp_100');
elseif (v == 1.5)
    importfile('Tp_100_v_15');
end

t_p = 100;
%Pause time = 10 seconds
if v == 1
    x_block1 = [4.1912      3.9261      1.0718      1.0718           0     0.12356     0.12356           0       2.126       2.126      2.4618      2.6425      2.6425      1.5877      1.1912      1.1912      2.2038      2.2038           0      1.5051      1.5051        2.43        2.43      4.5196      4.5196           5      4.1312      1.8226      1.8226           5      3.3098      3.3098      1.1796      0.6695      0.6695     0.76081      1.6773      1.6773           0      2.8048      2.8048      4.3393      4.9697      4.9697           5      4.2211      3.8511      3.8511           5      1.6652      1.6652     0.58381           0     0.54893     0.54893           0      2.8341      2.8341      1.3998      1.3998     0.67145     0.67145     0.43534           0     0.38284     0.38284      4.7846      4.7846      2.2589      2.2589           0      3.4573      3.4573     0.99364     0.95635     0.95635           0      1.4907      1.4907           0       1.121       1.121      0.3272           0      3.9129      3.9129           5      3.1609      1.5648      1.5648      1.3428     0.72283     0.72283      1.6849      3.5736      3.5736      2.9149      2.7958      2.7958      2.6255      1.4428      1.4428           0      1.0029      1.0029           0      2.9669      2.9669           5      3.1357      2.5746      2.5746      3.3191      3.3191      4.0363       4.526       4.526           5      1.1896      1.1896     0.59822           0     0.70432     0.70432      2.0119      2.3011      2.3011           0     0.98188     0.98188           5      4.2242      4.2242      2.1801      2.0618      2.0618       1.943           0      1.1413      1.1413      1.3765      3.0027      3.0027      4.2553      4.2553       4.043      3.4106      3.4106           5      4.6257      4.6257      2.4732      2.4732      1.9977           0      2.5262      2.5262           0     0.17476     0.17476      0.1276           0      1.5255      1.5255     0.69292     0.53856     0.53856     0.35234     0.30533     0.30533      2.5487      2.5487      1.6303     0.85645     0.85645    0.033533    0.033533      4.8617      4.8617      3.2942      1.6611      1.6611      1.3541      1.2612      1.2612      1.1165    0.089315    0.089315           0       2.081      2.2051      2.2051    0.062949    0.062949     0.32536      1.3851      1.3851      3.0935      3.0935      4.1495      4.3772      4.3772           5      4.6959      4.4758      4.4758      4.5408      4.5408      2.0205      2.0205           5      2.7808      2.7808           5      4.4063      4.4063           5     0.21062     0.21062      2.8182      2.8182           0       2.501       2.501     0.66169     0.63957     0.63957       3.381       3.381      2.0016      1.0736      1.0736      1.2951       2.081       2.081      3.4688      4.7001      4.7001           5      1.9153      1.9153       4.553       4.553      3.9874      2.1494      2.1494      2.1363      2.0945      2.0945      1.9628      1.6698      1.6698     0.82389     0.77224     0.77224           0      1.7104      1.7104      0.8378           0     0.37739     0.37739           0      1.5006      1.5006           5      3.5217      3.2847      3.2847           0     0.23359     0.23359           5      3.8083      3.8083      3.6365      3.5403      3.5403      4.5882      4.7274      4.7274           5      1.2437      1.2437      1.9471      1.9471];
    y_block1 = [0.097837           0      1.0531      1.0531      2.7307      2.9241      2.9241      2.8866      2.2414      2.2414           0      1.2058      1.2058           5      3.5737      3.5737      0.8041      0.8041      2.8881      4.3114      4.3114      2.4208      2.4208      4.0183      4.0183      4.3678           5      3.3203      3.3203      3.8848      4.1851      4.1851           5      4.8049      4.8049           5      3.0413      3.0413      3.3382      3.8346      3.8346           0      1.5755      1.5755      1.5166           0     0.72033     0.72033      1.0445      1.9853      1.9853           0      1.0718      2.0795      2.0795       2.174      2.6619      2.6619     0.63099     0.63099      4.3987      4.3987           5      3.8912      2.9162      2.9162      4.2602      4.2602      2.2006      2.2006      2.4418      2.8109      2.8109           5      4.9669      4.9669      4.7148       4.322       4.322      4.4212      4.4958      4.4958           5      4.7922      2.3067      2.3067      1.4498           0      1.2582      1.2582           0      3.5136      3.5136           5       2.082       2.082           0     0.37617     0.37617           0      2.6111      2.6111      3.4476      4.0291      4.0291      3.3165      1.2085      1.2085     0.57808           0     0.17399     0.17399      3.5432      3.5432           5      4.0054      4.0054      3.9362      3.3807      3.3807           5       3.362      1.4334      1.4334           5       4.211       4.211      4.5278       4.663       4.663         3.2      2.9176      2.9176           0      0.1688      0.1688           0       2.761      4.3826      4.3826           5     0.73298     0.73298      4.4964      4.4964           5      3.5001      3.5001      2.6397       2.437       2.437      4.7704      4.7704           5      4.0356       2.816       2.816      4.7357      4.8685      4.8685           5      4.6442     0.39047     0.39047           5      4.1453      4.1453           0      1.0464      1.0464      3.1213      3.1213           5       3.417       3.417      1.2941      1.2941      3.3684      3.3684           5         3.3         3.3           5      4.4853      4.4853           5      1.3459      1.3459      1.2905           0    0.076943    0.076943     0.92669     0.92669           0      3.7423      3.7423      2.4191      2.4191           5      4.4435      4.4435      1.4578           0      1.0552      1.0552      3.1125      3.1125     0.15284     0.15284     0.59211      0.9193      0.9193      3.3265      3.9705      3.9705      3.9465      3.7524      3.7524      1.9839      1.9839       3.126      4.1396      4.1396           0    0.049792    0.049792      1.3109      1.3109           0     0.88183     0.88183           0      3.1282      3.1282           5      3.3394      3.3394      3.4288      4.3479      4.3479       3.869       3.869           5      1.3247      1.3247           0      4.2332      4.2332           5      3.2942      3.2942           5      4.8959      4.8959      4.6149      3.9927      3.9927           5      4.0328      3.5971      3.5971      3.3337       2.286       2.286       4.194           5      4.8707      4.8707      3.5123      3.4157      3.4157       3.395      3.3899      3.3899           0      1.8977      1.8977           5      4.5878      4.5878      4.3889      1.6476      1.6476      4.6671      4.6671];
    time_block1 = [0     0.282653924      3.32497       103.32497      105.315793      105.545304      205.545304      205.674433      207.896239      307.896239      310.162616      311.381858      411.381858      415.319954      416.800332      516.800332      519.749249      619.749249      622.782377      624.853854      724.853854      726.958543      826.958543      829.588802      929.588802      930.182931      931.257414      934.112369      1034.11237      1037.33953      1039.05614      1139.05614      1141.33696      1141.88309      1241.88309      1242.09853      1244.26102      1344.26102      1345.96434      1348.81271      1448.81271      1452.94289      1454.63986      1554.63986      1554.70611      1556.41102      1557.22081      1657.22081      1658.41457      1661.87951      1761.87951      1764.14025      1765.36071      1766.50826      1866.50826      1867.06526      1869.94104      1969.94104      1972.42735      2072.42735      2076.26478      2176.26478      2176.91081      2178.10198       2179.1495       2279.1495      2283.75192      2383.75192      2387.01099      2487.01099      2489.28271      2492.75963      2592.75963       2596.0553      2596.10518      2696.10518      2697.09419      2698.63579      2798.63579       2800.1298      2801.25325      2901.25325      2902.19361      2902.58124      2907.21679      3007.21679      3008.60102      3010.94285      3012.97525      3112.97525      3114.25291      3117.82081      3217.82081      3219.59137      3223.06726      3323.06726      3325.25098      3325.64554      3425.64554      3426.05849       3428.9249       3528.9249      3530.59271      3531.75196      3631.75196      3632.98221      3636.62175      3736.62175      3738.75035      3740.70222      3741.28968      3841.28968      3844.74016      3944.74016      3946.36396      3947.47262      4047.47262      4047.95163      4051.80232      4151.80232      4153.52621      4155.27008      4157.32325      4257.32325      4261.12201      4261.96236      4361.96236      4364.28522      4365.27636      4465.27636      4469.55253      4470.37817      4570.37817      4573.94053      4574.14663      4674.14663      4674.35304      4677.72919      4679.71218      4779.71218      4780.37286      4784.93926      4884.93926      4888.90561      4988.90561      4989.45218      4991.07994      5091.07994       5092.8873      5093.31293      5193.31293      5196.48752      5296.48752      5297.01555      5299.23385      5302.03905      5402.03905       5405.2119      5405.43139      5505.43139      5505.57108      5505.94908      5510.46807      5610.46807      5615.15218      5616.02068      5716.02068      5720.17019      5721.21762      5821.21762      5824.27345      5924.27345      5926.36465      5928.12671      6028.12671      6030.40347      6130.40347      6135.65831      6235.65831      6237.92089      6240.27818      6340.27818      6342.00564      6342.52862      6442.52862      6443.06323      6446.85895      6546.85895      6546.96404       6549.4127      6549.55869      6649.55869      6651.86318      6751.86318      6752.82631      6756.71578      6856.71578       6858.8767       6958.8767      6961.66533      6962.26665      7062.26665      7065.31656      7066.80576      7067.88364      7167.88364      7169.94198      7269.94198      7273.82929      7373.82929      7376.84095      7379.08409      7479.08409      7482.35812      7483.23408      7583.23408       7583.8283      7588.62161      7688.62161       7691.7723       7791.7723       7794.8131      7797.51165      7897.51165      7902.04146      7902.09595      8002.09595      8005.11359      8105.11359      8107.01661      8108.29673      8208.29673      8209.20595      8212.43131      8312.43131      8314.76155      8316.82879      8416.82879      8417.14172      8420.36046      8520.36046      8523.04133      8623.04133      8624.30587      8628.41516      8728.41516      8729.73993      8733.97333      8833.97333      8834.75136      8836.48218      8936.48218      8938.38626       8938.5025       9038.5025      9039.32426      9041.14431      9141.14431      9142.47703      9143.75662      9144.33302      9244.33302      9244.79328      9246.62341      9346.62341      9350.60914      9352.29287      9352.56288      9452.56288      9456.11736      9456.37014      9556.37014       9561.1366      9562.32834      9662.32834      9665.72257      9667.62275      9767.62275      9770.89721      9771.33225      9871.33225      9871.66969      9876.31992      9976.31992      9979.42021           10000];
    pause_block1 = zeros(1,length(time_block1));

    x_block2 = [4.5677      4.5788      4.6545      4.6545           5      2.2494      2.2494           0      1.9403      1.9403      0.7133     0.66441     0.66441     0.76483       3.972       3.972           0     0.60111     0.60111     0.56406     0.54955     0.54955           0      4.9439      4.9439           0     0.64143     0.64143     0.59913     0.59913           0           5      4.7239      4.7239           0     0.98825     0.98825           0     0.88929     0.88929      1.1086      2.2526      2.2526     0.47188     0.47188           0     0.61407     0.61407      2.0174      2.0181      2.0181      2.0153           0      2.9686      2.9686      3.9561      4.6906      4.6906      2.2927     0.38045     0.38045       1.781      2.5251      2.5251           0       1.535       1.535     0.65605     0.41701     0.41701      4.4428      4.4428           5      4.9347      2.2266      2.2266      2.9698      3.3168      3.3168      3.0683      2.4855      2.4855      4.3251      4.3251      4.2979       3.981      3.9551      3.9551      4.6633           5      3.4116      3.4116     0.66836     0.66836           0      1.9077      1.9077           0     0.62652     0.62652      2.0842      4.7567      4.7567      2.4887     0.98691     0.98691           5      3.4871      3.4871           5      4.5066      4.5066      3.9389      3.3152      3.3152      4.1018      4.6877      4.6877           5        1.31        1.31      4.8448      4.8448           5      4.2427      4.2427           5      2.8855      2.7873      2.7873      2.3675     0.28662     0.28662     0.52177      1.3126      1.3126           0      0.9822      2.8576      2.8576           5      4.3118      3.6962      3.6962      3.9129      4.9064      4.9064           5     0.87929     0.87929       3.736       3.736      3.9021      4.2733      4.2733           5      4.4601      3.9404      3.9404           5      4.8468      4.8468           5      3.9245      3.0292      3.0292           0     0.52097     0.52097           5      3.9996      3.9996           5      3.4736      3.4736           5      2.6424      2.6424           5      4.7207      4.7207           5      4.0248      3.5452      3.5452       3.944           5      2.8939      2.8939      4.3174      4.3174           5     0.74314     0.74314      1.9274      1.9274      2.1126           5      4.1526      4.1526      3.4622      3.2871      3.2871      3.6277      4.5454      4.5454      4.7684      4.9502      4.9502      3.3132      1.6594      1.6594           5      3.7843      3.7843     0.84412     0.84412      1.6116      3.0447      3.0447      1.4467     0.95004     0.95004           0    0.086157     0.50291     0.50291     0.28888           0      1.5315      1.5315     0.65358           0     0.93525     0.93525       3.478       3.478      2.6201      2.6201           5      2.9216      2.9216           0    0.081386    0.081386      2.5602      3.8602      3.8602           5      4.0058     0.96493     0.96493      1.0701      1.1594      1.1594           5      3.2994      3.2994     0.55595     0.55595           0      2.9522      2.9522      2.9173           0      1.0229      1.0229      3.8992      4.9218      4.9218      2.5669      2.5669      2.4894      2.4518      2.4518      3.1858      3.9675      3.9675           5      4.8111      3.5279      3.5279           5       3.703       3.703      3.9935      4.5514      4.5514           5      2.5944      1.9763      1.9763      2.8968       4.617       4.617      0.7493      0.7493];
    y_block2 = [4.3521           5     0.56708     0.56708     0.65681      1.3712      1.3712      1.9056      2.3665      2.3665           0    0.094288    0.094288           0      3.0113      3.0113      1.9746      1.8177      1.8177           5      3.7529      3.7529      3.8515      4.7385      4.7385      3.6634      3.5239      3.5239     0.28837     0.28837     0.38945       1.233      1.2796      1.2796      2.7487      3.0561      3.0561      3.7978      4.4653      4.4653           5      2.2099      2.2099      4.7436      4.7436      3.6084      2.1311      2.1311           5      4.9985      4.9985           5      3.9237      2.3384      2.3384           5      3.0201      3.0201           5      3.4211      3.4211           5      4.1613      4.1613      3.3378      2.8373      2.8373           5      4.4118      4.4118     0.30958     0.30958    0.032479           0      1.3467      1.3467           5      3.2942      3.2942           5     0.99984     0.99984       4.571       4.571           5           0     0.40854     0.40854           0     0.19425      1.1106      1.1106      2.0517      2.0517      2.5883        4.12        4.12      2.0838       1.415       1.415           0      2.5942      2.5942           5      3.4069      3.4069      4.3248      4.6708      4.6708      3.1823      2.6968      2.6968           0      2.9622      2.9622           0       2.206       2.206      2.2456      2.7129      2.7129      4.5545      4.5545      4.1405      2.1199      2.1199      2.8793           5      4.9016      4.9016           5      4.5121      4.5121           5      3.3592      3.3592      4.2977           5       3.659       3.659      4.6739           5      4.7084      4.7084           5       3.663       3.663      3.5868     0.23195     0.23195      1.4839      1.4839           0      3.3157      3.3157      4.2821           5      4.3089      4.3089      1.5089       1.104       1.104     0.96637           0     0.80445     0.80445       3.894      4.4253      4.4253       3.792      3.6506      3.6506       2.915      1.7928      1.7928      2.9919       4.844       4.844      1.2793     0.85697     0.85697     0.66617           0     0.32763     0.32763           0     0.86744      2.5975      2.5975     0.79317     0.79317     0.99318      2.2405      2.2405      4.8672      4.8672           5      2.9305      2.3231      2.3231           0     0.58936     0.58936           0      1.5879      1.5879           0      1.2943      1.2943           0      1.3076      1.3076      2.9007      3.4804      3.4804     0.82058     0.82058           0      1.5322      1.5322           5      3.9221      3.9221      4.9104           5      4.5665      4.5665           5      4.4149      1.3127      1.3127           0     0.97728      2.3757      2.3757       1.172       1.172      3.0613      3.0613      2.2481       1.538       1.538       2.589      2.6183      2.6183           5      3.7509      3.7509      4.4181           5      3.2201      3.2201           5      3.4872      3.4872      1.9638      1.2893      1.2893      1.1935      1.1935       1.009    0.029487    0.029487           0      2.4658      3.3304      3.3304           0      1.1841      1.1841      1.5712      1.5712           5      3.3364      3.3364           5      3.2282      3.2282       4.726           5      3.1384      3.1384      3.6309      4.0648      4.0648           5       3.204       3.204      2.7004           0     0.69382     0.69382           0      1.2965      1.2965      3.8736      3.8736];
    time_block2 = [0     0.647983104       5.0815527      105.081553       105.43851       108.28033       208.28033      210.592369      212.586684      312.586684      315.252395      315.358603      415.358603       415.49635      419.895672      519.895672      524.000751      524.621996      624.621996      627.804534      629.051717      729.051717      729.610038      734.632876      834.632876      839.692315      840.348738      940.348738      943.584584      1043.58458      1044.19218      1049.26284      1049.54286      1149.54286      1154.48993      1155.52487      1255.52487       1256.7605       1257.8724       1357.8724      1358.45035      1361.46591      1461.46591      1464.56275      1564.56275      1565.79212       1567.3919       1667.3919      1670.58559      1670.58722      1770.58722      1770.59031      1772.87504      1776.24048      1876.24048      1879.07937       1881.1911       1981.1911      1984.30073      1986.78055      2086.78055      2088.89114      2090.01234      2190.01234      2192.66828       2194.2828       2294.2828      2296.61729       2297.2522       2397.2522      2402.99981      2502.99981      2503.62214      2503.69508      2506.71956      2606.71956      2610.44773      2612.18845      2712.18845      2713.91225      2717.95464      2817.95464       2821.9718       2921.9718      2922.40167      2927.41171      2927.82107      3027.82107      3028.63864      3029.02736      3030.86117      3130.86117      3133.76131      3233.76131      3234.61845      3237.06495      3337.06495      3339.85522       3340.7716       3440.7716      3442.80314      3446.52759      3546.52759      3549.83392      3552.02325      3652.02325      3656.13996      3657.69188      3757.69188      3759.81424      3760.50642      3860.50642      3863.26233      3866.28945      3966.28945       3969.3543      3971.63679      4071.63679      4071.95162      4075.67105      4175.67105      4179.65683      4279.65683      4280.09898      4282.25689      4382.25689      4383.32941      4386.32415      4386.46315      4486.46315      4486.89434      4489.03167      4589.03167      4589.57329      4591.39475      4691.39475      4693.00834       4694.2158      4696.52135      4796.52135      4798.89197      4799.65355      4800.33471      4900.33471      4900.69805      4902.36379      5002.36379      5002.48445      5007.79815      5107.79815      5110.91714      5210.91714      5212.41028      5215.74665      5315.74665      5316.95581      5317.85406      5318.71881      5418.71881      5421.71254      5422.14543      5522.14543      5522.35141      5523.79729       5525.0009       5625.0009      5629.32769      5630.07183      5730.07183      5734.59541      5735.60578      5835.60578      5836.84749       5838.7421       5938.7421      5940.68322      5943.68135      6043.68135       6047.9552      6048.46151      6148.46151      6148.79977      6149.98077      6150.56161      6250.56161      6251.07777      6252.44433      6255.16989      6355.16989      6357.46813      6457.46813      6458.17942      6462.61526      6562.61526      6565.49659      6665.49659      6665.72452      6669.27697       6670.3195       6770.3195      6772.74307       6773.3579       6873.3579      6874.03861      6875.87263      6975.87263      6977.47612      6978.78312      7078.78312      7080.86996      7082.97827      7182.97827      7186.67929      7188.02618      7288.02618      7291.99092      7391.99092       7393.1145      7395.21241      7495.21241      7499.03073      7500.21756      7600.21756      7601.58842      7601.71274       7602.3141       7702.3141      7702.79758      7703.45015      7706.90973      7806.90973      7808.48897      7809.66466      7811.34704      7911.34704      7914.16027      8014.16027      8016.23516      8116.23516      8118.75015      8120.94649      8220.94649      8224.05142      8224.13791      8324.13791      8327.57547      8329.37831      8429.37831      8430.69903        8431.851       8435.3745       8535.3745       8537.1575      8538.67297      8638.67297      8642.80461      8644.63412      8744.63412      8747.37922      8847.37922      8847.96497      8851.07544      8951.07544      8951.12112      8954.94094      8956.28029      9056.28029      9060.68084      9062.24537      9162.24537      9164.63189      9264.63189      9268.06158      9269.72557      9369.72557      9371.54384      9373.48045      9473.48045      9475.29968      9475.63243      9477.89346      9577.89346      9579.44574      9580.81337      9680.81337      9681.79263      9683.67328      9783.67328      9784.34773      9787.96423      9788.89342      9888.89342      9890.04613      9892.20011      9992.20011      9996.84769           10000];
    pause_block2 = zeros(1, length(time_block2));

elseif v == 1.5
    x_block1 = [3.3459           5      2.8742      1.5986      1.5986      1.9251           5       3.506       3.506      4.3048           5      3.3439      3.3439      4.2575      4.4778      4.4778      4.9957           5      4.4211      4.4211           0     0.53627      1.7173      1.7173       4.513       4.513     0.84427           0    0.081843    0.081843      3.7715      4.7219      4.7219           5      4.5062      1.7837      1.7837           5           0     0.42541     0.42541           5      4.3093      2.7723      2.7723      4.8012           5      2.8699      2.8699           0      2.8592      2.8592      3.6206      4.5739      4.5739      3.9476      3.8385      3.8385           5       3.963      2.6877      2.6877           0           5       4.192       4.192           5      4.6216      2.4565      2.4565      2.5602      3.1723      3.1723      2.5641     0.79425     0.79425     0.75688     0.34557     0.34557       2.219      2.9709      2.9709      3.7787           5      4.0589      4.0589      4.0175      3.5838       3.432       3.432      4.5135           5      3.5454      3.5454      1.4969      0.5439      0.5439           5      3.8693      3.1742      3.1742      2.7161           0     0.27874     0.27874       1.174      4.0483      4.0483      3.8128      2.8158      2.2958      2.2958           5      2.5598      2.5598           0      4.4029      4.4029           0      1.2599      1.5633      1.5633      1.8197           5      3.8029      3.8029      1.2861     0.81321     0.81321     0.78369     0.55688     0.47201     0.47201      4.4907           5       3.675       3.675      4.4702           5      4.8085      4.8085           5      2.4421           0      1.9824      1.9824     0.85951    0.048403    0.048403           0           5      3.6624      2.6954      2.6954      2.6575      2.0624      1.7498      1.7498           0     0.91851      2.7975      2.7975      2.8111      2.8418      2.8418       0.902           0      2.3978      2.3978      1.5648     0.18958     0.18958      4.0519           5      2.2858      2.2858     0.74504           0      3.4339      3.4339           0      3.2282      3.2282           5      2.4051      2.4051           5      1.5856      1.2216      1.2216      1.3583        4.49      4.8076      4.8076           5           0      1.4463      1.4463     0.79187           0     0.97671     0.97671      2.9189           5      4.6979      4.6979           5       2.012       2.012       1.106     0.56303     0.56303      1.8735      2.6679      2.6679           5      3.5954      3.5954           5      2.5032      2.5032           0      4.9899           5      4.9453      4.9453           5           0     0.96259     0.96259           0           5      4.1172      4.1172      3.0175      2.3106      2.3106           0      1.4216      1.4216           5      3.6874      3.6874           0    0.047484      0.1787      0.1787     0.28313      2.2947      2.2947           5           0     0.94491     0.94491           5      3.7013      3.7013           5      4.0585      3.7124      3.7124      3.6015      2.6782      2.6782           0      1.8918      4.0487      4.0487           5      2.5884      2.5884           0      4.9519      4.9519      2.4927      2.4927           0     0.50644      2.1125      2.1125      2.4856      3.1192      3.1192           0    0.077645      2.6133      2.6133     0.64991           0      2.1869      2.1869           0           5      4.7248      4.7248           5      4.8697      4.4925      4.4925           5           0      1.1988      1.1988      1.7562           5      4.8863      4.8863           5           0      1.1565      1.1565           0      1.8107      1.8107      1.5807           0       2.983       2.983           5      4.3224      3.7645      3.7645      3.6657      3.1876      3.0562      3.0562           5      4.5939      4.5939           5       4.486     0.19403     0.19403      3.4269      3.4269      2.0277    0.010584    0.010584      4.3518      4.3518      4.0657      3.5633      3.5633      4.3904           5      4.5333      4.5333];
    y_block1 = [0.95217     0.53549           0     0.32133     0.32133           0      3.0262      4.4965      4.4965           5      4.5618       3.518       3.518           0     0.84802     0.84802           5      4.9656     0.32442     0.32442      4.4942           5      3.8861      3.8861      2.4674      2.4674           0     0.56781     0.62285     0.62285           5      3.8726      3.8726      4.2788           5      1.0239      1.0239      1.6654      2.6627      2.7476      2.7476     0.36043           0     0.80208     0.80208           0    0.078572     0.92063     0.92063       1.982      3.0394      3.0394           0      3.8058      3.8058           0     0.66281     0.66281      2.9541           5      2.4842      2.4842      2.4648      2.4286      2.4228      2.4228     0.77265           0      4.4217      4.4217           5      1.5868      1.5868           0      4.6174      4.6174           5     0.79008     0.79008           5      3.3104      3.3104           5      2.4457     0.47743     0.47743           0           5      3.2489      3.2489           5      4.2122       1.857       1.857           5      3.5379      3.5379      4.7041           5      4.8181      4.8181           5      3.9212      3.8105      3.8105           5      1.1813      1.1813           0           5       2.392       2.392      1.4827     0.66218     0.66218      1.8111      3.7874      3.7874     0.84263           0     0.20293     0.20293           0      2.5166      3.4639      3.4639           0     0.65091     0.65091           0           5       3.129       3.129           0     0.39657      1.4283      1.4283           0     0.95148      1.2954      1.2954      1.2052           0      1.1506      2.0847      2.0847           5      2.8942      2.8942      2.9101      4.5589           5      4.6811      4.6811           5           0       2.626       2.626      4.1828           5      3.3283      3.3283           5      1.2302      1.2302           0     0.57204      2.0927      2.0927           0      3.4551      3.4551           5      4.6208      3.5351      3.5351           5      4.2916      1.0267      1.0267      1.2438      1.4479      1.4479      1.4267      1.3956      1.3956      2.9521           5      4.7817      4.7817           5           0     0.50712     0.50712     0.61518      3.4234      4.2358      4.2358           5      4.0753      2.9348      2.9348           5      2.7871      2.4658      2.4658       2.446      2.2499      2.2499           0      1.3484      1.3484           5      2.7863      2.7863      2.6448      2.5596      2.5596      3.1672      4.2473      4.2473      2.8284           0   0.0057343    0.036712    0.036712    0.064002      2.5608      3.0415      3.0415      2.6363     0.53188      0.1603      0.1603           5      1.8887      1.8887      1.4346      1.1551      1.1551     0.40396     0.12841     0.12841      4.9381           5      4.8288      4.8288           5      1.7031      1.7031      2.3974      3.6805       3.923       3.923      3.0123      2.7207      2.7207      1.1435           0     0.42026     0.42026           0      3.4996      3.4996      1.4487           0      1.6517      1.6517      2.3177      4.0061      4.0061      2.7591     0.37352     0.37352      2.2274      2.2274     0.37613           0      1.1928      1.1928           0      2.0257      2.0257    0.049201           0      1.6067      1.6067           0     0.53186      2.3215      2.3215      2.1793      1.8541      1.8362      1.8362      3.9834           5      2.0572      2.0572      2.2459      4.1055      4.5514      4.5514           5      2.3889      2.2974      2.2974      2.2869      1.8215      1.7138      1.7138      1.1438     0.25135     0.25135           0      1.7281      4.9892      4.9892      1.2547           0      1.0329      1.0329           0           5      3.6265      3.6265      1.4615      1.0092      1.0092     0.56377           0      4.7077      4.7077      1.9736      1.9736           0      2.8451      2.8451      3.6979      3.6979           5       2.714       2.714           5       3.315      2.0248      2.0248];
    time_block1 = [0      1.13719765        2.598678      3.475666      103.475666      103.781072      106.657249      108.054724      208.054724      208.684225      209.232091      210.537171      310.537171      312.960297      313.544395      413.544395      416.333837      416.356962      419.475049      519.475049      523.526541      524.017988      525.100281      625.100281      627.190332      727.190332       730.13782      730.816121      730.881875      830.881875      834.698396      835.681426      935.681426      936.009615      936.592352      939.804883      1039.80488       1041.9913      1045.39029      1045.67948      1145.67948      1149.11947      1149.63887      1150.79469      1250.79469       1252.2492      1252.39169      1253.91871      1353.91871       1355.9586      1357.99092      1457.99092       1460.0798      1462.69541      1562.69541      1565.26675      1565.71457      1665.71457      1667.42716      1668.95629      1670.83665      1770.83665       1772.6285      1775.96192      1776.50061      1876.50061       1877.7255      1878.29905      1881.58125      1981.58125      1981.97297      1984.28475      2084.28475      2085.41765      2088.71431      2188.71431      2188.97058      2191.79055      2291.79055      2294.86252      2296.09539      2396.09539       2397.3439      2399.23141      2400.68586      2500.68586      2501.00534      2504.35119      2505.52299      2605.52299      2606.89511      2607.51237      2609.35789      2709.35789      2711.85901      2713.02252      2813.02252      2816.09331      2816.87249      2817.35152      2917.35152       2917.6801      2919.62843      2919.82838      3019.82838      3020.82087      3024.00724      3124.00724      3124.81025       3128.2092      3129.98206      3229.98206      3231.88406      3233.60038      3333.60038      3335.47092       3338.6883       3438.6883      3442.21955      3443.23001      3443.47337      3543.47337      3543.69139      3546.39508      3547.41278      3647.41278      3650.26725      3650.80363      3750.80363      3751.23802      3754.57478      3755.82337      3855.82337      3859.21883      3859.64917      3860.76873      3960.76873      3961.85857      3962.58459      3962.84704      4062.84704      4062.98817      4064.87324      4066.67297      4068.13392      4168.13392      4170.21665      4171.72109      4271.72109      4271.75506      4275.26496       4276.2039      4276.88272      4376.88272       4377.0968      4380.45366      4382.21672      4482.21672      4483.77811      4484.59772      4486.27441      4586.27441      4587.38894      4589.90223      4689.90223      4691.43355      4692.14562      4694.03849      4794.03849      4795.54005       4798.0192       4898.0192      4900.79242      4901.47318      4903.42205      5003.42205      5004.83939      5005.52475      5008.68364      5108.68364      5110.97749       5113.1339       5213.1339      5214.31521      5216.04527      5316.04527      5318.06254      5320.71685      5320.99983      5420.99983      5421.17159      5425.10476      5425.50367      5525.50367      5525.65079      5529.47389      5530.57979      5630.57979      5631.25057      5632.06218      5633.06323      5733.06323      5734.95322      5736.97838      5737.27239      5837.27239      5837.47425      5839.47052      5939.47052      5941.08751      5942.05658      6042.05658        6044.643      6046.21097      6146.21097      6147.76856       6148.7067       6248.7067      6249.72697      6251.54054      6351.54054      6353.45882      6357.28264       6357.2904      6357.33228      6457.33228        6457.373      6461.09882      6461.81611      6561.81611      6562.51236      6566.12891      6566.76748      6666.76748      6670.07618      6672.20323      6772.20323      6773.77308      6774.73896      6874.73896      6877.17655       6878.0707       6978.0707      6982.11103      6982.16306      6982.30683      7082.30683       7082.4405      7085.01526      7185.01526      7186.87723      7190.31858      7190.96894      7290.96894      7293.73967      7294.62703      7394.62703      7395.98907      7396.97656      7397.33949      7497.33949      7497.62926      7500.04217      7600.04217      7602.29105      7603.87956       7605.6907       7705.6907      7706.46488      7708.42748      7808.42748      7810.34288      7814.00724      7914.00724      7916.06038      8016.06038      8018.13033      8018.55089      8019.88461      8119.88461      8120.71781      8122.13279      8222.13279      8224.59456      8224.65584      8226.65707      8326.65707      8328.34841      8328.90827      8330.79215      8430.79215      8432.25315      8435.59353      8435.77741      8535.77741       8537.2206      8537.90388      8539.88182      8639.88182      8640.24282      8643.79923      8644.65195      8744.65195       8745.1289        8747.905      8748.00228      8848.00228      8848.07839      8851.42613      8852.20044      8952.20044      8953.05999      8954.40577      9054.40577      9054.63286      9056.19421      9059.14063      9159.14063      9161.97022      9162.92087       9163.7035       9263.7035      9264.39526       9267.7438      9268.66363      9368.66363      9370.60334      9371.00857      9471.00857      9471.41039      9471.91899      9476.16603      9576.16603      9578.98873      9678.98873      9680.60157      9682.92665      9782.92665      9785.87614      9885.87614      9886.76489      9888.32527      9988.32527      9989.94596      9991.14056      9992.05521           10000];
 
    x_block2 = [1.3309      1.2099     0.62671     0.62671     0.89515           5      3.0117      3.0117      2.7081      2.3153      2.3153           0      1.2345      1.2345           0      1.3338       3.562       3.562      2.0985      1.3081      1.3081      1.1054     0.31661     0.31661           0      1.3511      2.2198      2.2198           5       1.012       1.012           0      1.4785      3.2677      3.2677           5      2.0788     0.92261     0.92261       1.804      3.8073      3.8073           5       4.842      4.1812      4.1812           5      3.7642      2.4557      2.4557           5       2.729       2.729           0     0.97612     0.97612           0      2.5877           5      2.9376      2.9376      3.0501      3.3442      3.3813      3.3813      3.2285      2.0202      2.0202      2.0283      4.0256      4.0256      0.2706      0.2706     0.29051     0.33391     0.33876     0.33876      1.0981           5      4.6077      4.6077      1.8368      1.8368      1.7237     0.28267           0      0.5244      0.5244     0.14682           0     0.47933     0.47933     0.76623      4.7947           5      4.9462      4.9462      3.0114      3.0114      2.4731           0      3.4808      3.4808           5      4.1104      2.3568      2.3568      4.9927           5      2.6087      2.6087      3.0604       3.231       3.231      1.3069     0.38052     0.38052      2.2188      3.4234      3.4234       3.972       3.972           0      2.7296      2.7296           5      3.3478      1.4163      1.4163      1.4013      1.3762      1.3762           0           5      2.6175      2.6175           0     0.15492           5      4.4615      4.4615           5           0      1.9874      1.9874      1.2184      1.2184           0           5      4.9954      4.9954           5      3.9011      1.4182       1.147       1.147       1.127      0.9436     0.89139     0.89139      2.7838           5      4.7375      4.7375           5           0       1.221       1.221           0      3.8228      3.8228      2.8897      2.7192      2.7192      4.2567           5      4.6183      4.6183           0      2.4759      2.7351      2.7351      2.7437      3.2541      3.2541      1.3008      1.3008      1.1739           0     0.20581     0.20581           0      4.0315           5       3.402       3.402      2.5206      1.2996      1.2996      3.6295           5      2.8826      2.8826           5      4.1972      1.6541      1.6541     0.66115           0      3.6067      3.7778      3.7778      3.9957           5     0.86251     0.86251      4.4604           5      4.6664      4.6664           5      3.4474      1.8109      1.8109      3.5874           5      4.5457      4.5457           5      4.8241      3.4284      3.4284           0         3.7         3.7      3.2969      3.1235      3.1235           0      1.4205      3.5306      3.5306      0.1043           0     0.98031     0.98031           0      2.0709      4.1861      4.1861           5           0     0.19595     0.19595           0           5      2.4144      1.7231      1.7231      4.1705      4.6784      4.6784      1.9855      1.9855           0     0.54204      1.9188      1.9188      2.8571      4.1792      4.1792           5      3.2821           0      1.0896      1.0896           5      2.7616      1.4495      1.4495           0      3.1708      3.1708           5      3.7401           0     0.35332     0.35332      4.8926      4.8926           5           0      0.3971      0.3971       1.975      4.0345      4.0345      3.3708      2.8071      2.8071           5      4.2822      4.2822      3.8988      2.8006      2.8006           5           0      1.0531      1.0531       1.578      4.4971      4.4971      1.7497           0     0.15467     0.15467      1.6467      4.3708      4.3708           5      2.9169      2.9169           5     0.54384     0.54384      4.3677           5       4.337       4.337           5           0      2.2568      2.2568      1.2801     0.68909     0.68909      2.2251      2.8739      2.8739      3.1372      3.8409      3.8409           5     0.98206];
    y_block2 = [3.9892           5     0.12722     0.12722           0      1.9453      2.8876      2.8876           5      2.2673      2.2673      2.1535      2.0928      2.0928      1.0868           0      1.8156      1.8156           0     0.98067     0.98067           0      3.8165      3.8165       3.092           0      1.9879      1.9879      3.0443      4.5595      4.5595      2.7068           0      3.2755      3.2755      2.0561           0     0.81377     0.81377           0      1.8496      1.8496      4.6314           5      3.4588      3.4588      2.0803           0      2.2026      2.2026       3.179      4.0505      4.0505      3.6282      3.4772      3.4772      3.8943           5      3.9692       3.088       3.088           5           0     0.63091     0.63091           0      4.9861      4.9861           5      1.5744      1.5744       2.705       2.705           5           0     0.55988     0.55988           0      2.8771      3.1663      3.1663      4.6073      4.6073           5           0     0.98082      2.8004      2.8004           0      1.0889      4.6439      4.6439           5           0     0.25482     0.32163     0.32163      4.8284      4.8284           5      4.2118      3.1024      3.1024      1.1458           0      2.2586      2.2586           0   0.0062565      2.0553      2.0553           5      3.8876      3.8876           0      1.8718      1.8718           0      1.2265      1.2265      4.4504      4.4504      3.9068      3.5332      3.5332      1.4882           0      1.7397      1.7397           0      2.9106      2.9106      2.6481      1.6946      1.2402      1.2402    0.069301           0      2.1674      2.4083      2.4083      2.5256      3.6148      4.0478      4.0478      0.2986      0.2986     0.78399       2.776      2.7778      2.7778      2.7871           5           0      0.5462      0.5462           0           5      3.5766      3.5766           5       3.333      3.1356      3.1356      3.1551      3.5271       3.618       3.618      3.8409      4.5388      4.5388           0     0.82946     0.82946           5      2.9837      1.9484      1.9484     0.68001           0    0.071177    0.071177           0      4.2434      4.2434      0.2799      0.2799           0       2.588      3.0417      3.0417       2.894           0     0.69522      1.8423      1.8423           0      2.5523      2.5523           5      3.5602      1.3357      1.3357      0.3672           0      1.1633      1.1633           0     0.77457           5      4.7996      4.7996           5      4.0764     0.27161     0.27161           5      4.2909      3.8525      3.8525      3.1712           0      3.3428      3.3428           5      3.6823      3.2585      3.2585       4.514           5      1.1426      1.1426       2.158      3.2538      3.2538           0      1.3996      1.3996     0.43755           0     0.64994     0.64994           5      4.8676       3.623       3.623      2.4589           0      2.5117      2.5117      2.4584       2.131      2.1182      2.1182      2.0648     0.70381           0     0.18819     0.18819           5      4.0016      4.0016      2.4347      2.4347     0.52211           0      1.3261      1.3261           0      1.8684      1.8684      1.2643           0      2.4156      3.2175      3.2175      4.3511           5      4.6196      4.6196      4.1867      3.2397      3.2397      4.2821           5      2.8688      2.6674      2.6674       3.945       3.945       3.925      2.9915      2.9173      2.9173           5      2.2816      2.2816           5      2.6913      2.6913       3.557      3.8404      3.8404           5      1.6785      1.6785      2.3803      3.9757      4.3117      4.3117           5      1.1725      1.1725           5      2.5624      2.3469      2.3469           5     0.15627     0.15627      1.2503      4.8723      4.8723      3.6762      1.1177      1.1177           0      0.1848     0.37858     0.37858     0.63283      2.5504      3.4159      3.4159           0      2.0667      2.0667           5       3.761       3.761           5      1.6889      1.6889      1.6736      1.6206];
    time_block2 = [0     0.678708596       3.950415      103.950415      104.148454      107.176772      108.643595      208.643595      210.066342      211.906841      311.906841      313.452229       314.27625       414.27625       415.33791      416.484922      418.401087      518.401087      519.955746      520.795463      620.795463      621.463059      624.061179      724.061179      724.588316      726.837835      728.284131      828.284131      830.266894      833.110992      933.110992      934.518389      936.574556      939.062731      1039.06273      1040.47502      1042.85656      1043.79912      1143.79912      1144.59886      1146.41659      1246.41659      1248.43439      1248.70174       1249.8197       1349.8197      1350.88856       1352.5017      1354.20966      1454.20966      1456.02644      1457.64809      1557.64809      1559.48909      1560.14758      1660.14758      1660.85524      1662.73128      1664.48013      1665.97532      1765.97532      1767.25221       1770.5913      1771.01263      1871.01263      1871.44541      1874.86567      1974.86567       1974.8764      1977.51995      2077.51995      2080.13432      2180.13432      2181.66441      2184.99786      2185.37113      2285.37113      2286.00007      2289.23202      2289.55693      2389.55693      2391.63907      2491.63907      2491.91153      2495.38053      2496.06103      2497.32346      2597.32346       2599.2073      2599.93979      2602.33125      2702.33125      2702.63611      2706.91674       2707.1349       2707.1921       2807.1921      2810.46181      2910.46181      2910.83846      2912.56888      2915.00445      3015.00445      3016.65587      3017.62293      3019.52921      3119.52921      3121.84334      3121.84975      3123.94917      3223.94917      3225.93528      3226.68557      3326.68557      3329.57734      3330.96968      3430.96968      3432.71871      3433.86476      3533.86476      3536.04496      3636.04496      3638.71765      3640.55435      3740.55435      3742.59142      3744.07384       3745.8068       3845.8068      3846.96663      3848.90708      3948.90708      3949.84111      3953.23452      3954.85149      4054.85149      4056.76312      4056.87626      4060.41476      4060.80807      4160.80807      4161.17552      4164.58703      4165.94302      4265.94302       4268.4945       4368.4945      4369.36883      4372.95695      4372.96027      4472.96027       4472.9672      4474.61434      4478.33603      4478.74259      4578.74259      4579.10696      4582.44254      4583.39211      4683.39211      4684.97074      4686.81954      4687.03849      4787.03849      4787.21395      4790.55649      4791.37277      4891.37277      4892.20025      4894.79091      4994.79091      4997.88008      4998.44462      5098.44462      5101.40789       5102.8405      5103.57611      5203.57611      5206.76901      5208.48075      5208.65992      5308.65992      5308.70772      5311.55703      5411.55703      5414.50281      5514.50281      5514.70771       5516.6022      5516.93437      5616.93437      5617.10326      5620.41172      5621.20651      5622.51793      5722.51793      5723.87948      5725.76569      5825.76569      5828.01856      5829.34378      5831.39115      5931.39115       5932.9434       5933.5319      5935.39628      6035.39628      6036.41591      6037.09482      6040.79844      6040.97407      6140.97407      6141.17143      6142.08105      6145.82837      6245.82837      6249.78944      6250.38347      6250.75071      6350.75071      6351.25644      6353.61034      6356.09159      6456.09159      6457.71129      6458.99912      6459.41329      6559.41329      6560.30337      6560.64793      6563.38267      6663.38267      6665.76638      6668.33896      6768.33896      6770.52473      6771.46496      6871.46496      6873.64385      6874.63478      6876.10671      6976.10671      6979.79831      6979.91068      6980.96689      7080.96689      7081.98145      7084.12465      7086.31379      7186.31379      7186.85752      7190.19799      7190.32891      7290.32891       7290.4643      7293.91891      7295.70535      7296.18303      7396.18303      7399.78202      7400.52879      7500.52879      7502.60582      7602.60582       7604.4437      7604.94544      7606.21978      7706.21978      7707.30279      7708.82872      7808.82872      7809.50816      7810.93014      7813.64698      7814.54888      7914.54888      7917.26317      7918.81686      7919.72761      8019.72761      8020.73613      8022.94226      8122.94226      8124.34582      8125.31255      8128.18235      8128.45345      8228.45345      8231.59724      8331.59724      8331.67005      8335.06097      8335.33028      8435.33028       8437.0722      8439.34583      8539.34583      8541.21132      8542.79567      8642.79567      8644.36741      8644.88189      8744.88189      8745.69614      8748.02837      8848.02837      8849.56748      8853.06639       8853.8033       8953.8033      8954.38039      8957.58942      9057.58942      9060.73037      9062.73073      9062.90756      9162.90756      9164.93678      9168.64156      9268.64156      9269.48297      9272.26847      9372.26847      9373.86984      9377.29547      9477.29547      9479.95139      9480.39054        9480.851        9580.851      9581.32436      9584.89443      9586.50585      9686.50585      9688.87442      9690.30742      9790.30742      9792.51487      9793.44722      9893.44722      9894.29164      9896.54837      9996.54837      9997.32114           10000];

end



for ind=2:length(time_block1)
    if(time_block1(ind) - time_block1(ind-1) == t_p)
        pause_block1(ind-1) = 1;
    else
        pause_block1(ind-1) = 0;
    end
end

for ind=2:length(time_block2)
    if(time_block2(ind) - time_block2(ind-1) == t_p)
        pause_block2(ind-1) = 1;
    else
        pause_block2(ind-1) = 0;
    end
end

p = [1.25 3.75 3.75 1.25]; 
q = [1.25 1.25 3.75 3.75]; %Location of LED
a = 2.5; b = 2.5; %Location of PD
r = 0.4; %Blockage radius

% pause_prob = 0.79; %Tp = 10s
if v == 1
    pause_prob = 0.97; %Tp = 100s

elseif v == 1.5
    pause_prob = 0.98;
end
% pause_prob = 0.79; %Tp = 300s
% pause_prob = 0.95; %Tp = 50s
%Vary pause time

for led_ind = 1:length(p)

m = (b-q(led_ind))/(a-p(led_ind));    
c = -p(led_ind)*(b-q(led_ind))/(a-p(led_ind)) + q(led_ind);

%CD: y = mx+c1
c1 = r/2 * sqrt(1+m^2) + c;
CD = y == m*x + c1;
CD_m = m;
CD_c = c1;

%AB: y = mx+c2
c2 = -r/2 * sqrt(1+m^2) + c;
AB = y == m*x + c2;
AB_m = m;
AB_c = c2;


%Line of minimum of distance (AD)
AD = y == -1/m*x + (24*b)/43 + (19*q(led_ind))/43 ...
    + ((a-p(led_ind))*(24*a/43 + 19*p(led_ind)/43))/(b-q(led_ind));
AD_m = -1/m;
AD_c = 24*b/43 + 19*q(led_ind)/43 + ((a-p(led_ind))*((24*a)/43 + 19*p(led_ind)/43))/(b-q(led_ind));

%Point D
[Dx, Dy] = solve([CD, AD], [x,y]);

%Point A
[Ax, Ay] = solve([AD, AB], [x,y]);

Axc = x == Ax;

%Point F
[Fx, Fy] = solve([CD, Axc],[x, y]);

Dxc = x == Dx;

%Point H (for LED = (3.75,3.75) and (1.25, 3.75))
[Hx, Hy] = solve([AB, Dxc], [x,y]);

%Line EG (variable line)
EG = y == -1/m * x + p(led_ind)/m + q(led_ind) + d;
EG_m = -1/m;
EG_c = p(led_ind)/m + q(led_ind) + d;

%Point E
[Ex, Ey] = solve([CD, EG],[x, y]);

%Point G
[Gx, Gy] = solve([AB, EG], [x,y]);


%1. LED (1.25, 1.25) __________________________________
if (p(led_ind) == 1.25 && q(led_ind) == 1.25)   
    prob_left1 = integrate(x,y,pause_prob, AD_m, AD_c, CD_m, CD_c, Dx, Ex);
    prob_mid1 = integrate(x,y, pause_prob, AD_m, AD_c, EG_m, EG_c, Ex, Fx);
    prob_right1 = integrate(x,y, pause_prob, AB_m, AB_c, EG_m, EG_c, Fx, Gx);

    prob_total1 = prob_left1 + prob_mid1 + prob_right1;

    prob_left2 = integrate(x,y,pause_prob, AD_m, AD_c, CD_m, CD_c, Dx, Ax);
    prob_mid2 = integrate(x,y,pause_prob, AB_m, AB_c, CD_m, CD_c, Ax, Ex);
    prob_right2 = integrate(x,y,pause_prob, AB_m, AB_c, EG_m, EG_c, Ex, Gx);

    prob_total2 = prob_left2 + prob_mid2 + prob_right2;

    prob_totA = prob_total1 + prob_total2;
    
    %d value range
    dlA = sqrt((p(led_ind)-a)^2 + (q(led_ind)-b)^2)*(1 - 0.95/2.15);
    d_startA = dlA*sqrt(1+(-1/m)^2);
    d_midA = Fy + Fx/m -p(led_ind)/m - q(led_ind);
    d_endA = b + a/m - p(led_ind)/m - q(led_ind);

    d_plotA = d_startA : 0.001 : d_endA;
    prob_finalA = zeros(1, length(d_plotA));

    for i = 1:length(d_plotA)
        if (d_plotA(i)) >= (d_startA) && (d_plotA(i)) <= (d_midA)
            prob_finalA(i) = subs(prob_total1, d, d_plotA(i));
        elseif (d_plotA(i)) >= (d_midA) && (d_plotA(i)) <= abs(d_endA)
            prob_finalA(i) = subs(prob_total2, d, d_plotA(i));
        else
            prob_finalA(i) = 0;
        end   
    end
    
    dist_plotA = abs(d_plotA)/sqrt(1 + (-1/m)^2);
    
    %Calculation of probability blockage #Simulation
%     prob_block_A1 = zeros(1,length(dist_LEDA1));
%     for ind = 1:length(dist_LEDA1)
%         if(dist_LEDA1(ind) ~= 0)
% %             prob_block_A1(ind) = subs(prob_totA, d, dist_LEDA1(ind));
%             if(dist_LEDA1(ind) >= d_startA && dist_LEDA1(ind) <= d_midA)
%               prob_block_A1(ind) = subs(prob_total1, d, dist_LEDA1(ind));  
%             elseif(dist_LEDA1(ind) >= d_midA && dist_LEDA1(ind) <= d_endA)
%               prob_block_A1(ind) = subs(prob_total2, d, dist_LEDA1(ind));  
%             end
%         else
%             prob_block_A1(ind) = 0;
%         end
%     end
%     
%     prob_block_A2 = zeros(1,length(dist_LEDA2));
%     for ind = 1:length(dist_LEDA2)
%         if(dist_LEDA2(ind) ~= 0)
%             if(dist_LEDA2(ind) >= d_startA && dist_LEDA2(ind) <= d_midA)
%               prob_block_A2(ind) = subs(prob_total1, d, dist_LEDA2(ind));  
%             elseif(dist_LEDA2(ind) >= d_midA && dist_LEDA2(ind) <= d_endA)
%               prob_block_A2(ind) = subs(prob_total2, d, dist_LEDA2(ind));  
%             end
%         else
%             prob_block_A2(ind) = 0;
%         end
%     end
    
%2. LED (3.75, 1.25) __________________________________
elseif (p(led_ind) == 3.75 && q(led_ind) == 1.25)
    prob_left1 = integrate(x,y,pause_prob, AB_m, AB_c, EG_m, EG_c, Gx, Ax);
    prob_mid1 = integrate(x,y, pause_prob, AD_m, AD_c, EG_m, EG_c, Ax, Ex);
    prob_right1 = integrate(x,y, pause_prob, AD_m, AD_c, CD_m, CD_c, Ex, Dx);

    prob_total1 = prob_left1 + prob_mid1 + prob_right1;
    
    prob_left2 = integrate(x,y,pause_prob, AB_m, AB_c, EG_m, EG_c, Gx, Ex);
    prob_mid2 = integrate(x,y,pause_prob, AB_m, AB_c, CD_m, CD_c, Ex, Ax);
    prob_right2 = integrate(x,y,pause_prob, AD_m, AD_c, CD_m, CD_c, Ax, Dx);

    prob_total2 = prob_left2 + prob_mid2 + prob_right2;

    prob_totB = prob_total1 + prob_total2;
    
    dlB = sqrt((p(led_ind)-a)^2 + (q(led_ind)-b)^2)*(1 - 0.95/2.15);
    d_startB = dlB*sqrt(1+(-1/m)^2);
    d_midB = Fy + Fx/m -p(led_ind)/m - q(led_ind);
    d_endB = b + a/m - p(led_ind)/m - q(led_ind);
    
    d_plotB = d_startB : 0.001 : d_endB;
    prob_finalB = zeros(1, length(d_plotB));

    for i = 1:length(d_plotB)
        if d_plotB(i) >= d_startB && d_plotB(i) <= d_midB
            prob_finalB(i) = subs(prob_total1, d, d_plotB(i));
        elseif d_plotB(i) >= d_midB && d_plotB(i) <= d_endB
            prob_finalB(i) = subs(prob_total2, d, d_plotB(i));
        else
            prob_finalB(i) = 0;
        end   
    end
    
    dist_plotB = abs(d_plotB)/sqrt(1 + (-1/m)^2);
    
    
    %Calculation of probability blockage #Simulation
%     prob_block_B1 = zeros(1,length(dist_LEDB1));
%     for ind = 1:length(dist_LEDB1)
%         if(dist_LEDB1(ind) ~= 0)
%             if(dist_LEDB1(ind) >= d_startB && dist_LEDB1(ind) <= d_midB)
%               prob_block_B1(ind) = subs(prob_total1, d, dist_LEDB1(ind));  
%             elseif(dist_LEDB1(ind) >= d_midB && dist_LEDB1(ind) <= d_endB)
%               prob_block_B1(ind) = subs(prob_total2, d, dist_LEDB1(ind));  
%             end
%         else
%             prob_block_B1(ind) = 0;
%         end
%     end
%     
%     prob_block_B2 = zeros(1,length(dist_LEDB2));
%     for ind = 1:length(dist_LEDB2)
%         if(dist_LEDB2(ind) ~= 0)
%             if(dist_LEDB2(ind) >= d_startB && dist_LEDB2(ind) <= d_midB)
%               prob_block_B2(ind) = subs(prob_total1, d, dist_LEDB2(ind));  
%             elseif(dist_LEDB2(ind) >= d_midB && dist_LEDB2(ind) <= d_endB)
%               prob_block_B2(ind) = subs(prob_total2, d, dist_LEDB2(ind));  
%             end
%         else
%             prob_block_B2(ind) = 0;
%         end
%     end
    
  
%3. LED (3.75, 3.75)__________________________________    
elseif (p(led_ind) == 3.75 && q(led_ind) == 3.75)
    
    prob_left1 = integrate(x,y,pause_prob, EG_m, EG_c, CD_m, CD_c, Ex, Dx);
    prob_mid1 = integrate(x,y, pause_prob, EG_m, EG_c, AD_m, AD_c, Dx, Gx);
    prob_right1 = integrate(x,y, pause_prob, AB_m, AB_c, AD_m, AD_c, Gx, Ax);

    prob_total1 = prob_left1 + prob_mid1 + prob_right1;
    
    prob_left2 = integrate(x,y,pause_prob, EG_m, EG_c, CD_m, CD_c, Ex, Gx);
    prob_mid2 = integrate(x,y,pause_prob, AB_m, AB_c, CD_m, CD_c, Gx, Dx);
    prob_right2 = integrate(x,y,pause_prob, AB_m, AB_c, AD_m, AD_c, Dx, Ax);

    prob_total2 = prob_left2 + prob_mid2 + prob_right2;
    
    prob_totC = prob_total1 + prob_total2;

    dlC = sqrt((p(led_ind)-a)^2 + (q(led_ind)-b)^2)*(1 - 0.95/2.15);
    d_startC = -dlC*sqrt(1+(-1/m)^2); % -2.0651
    d_midC = Hy + Hx/m -p(led_ind)/m - q(led_ind); % -2.5567
    d_endC = b + a/m - p(led_ind)/m - q(led_ind); % -3.7
    
    d_plotC = (d_endC) : 0.001 : (d_startC);
    prob_finalC = zeros(1, length(d_plotC));

    for i = 1:length(d_plotC)
        if abs(d_plotC(i)) >= abs(d_startC) && abs(d_plotC(i)) <= abs(d_midC)
            prob_finalC(i) = subs(prob_total1, d, d_plotC(i));
        elseif abs(d_plotC(i)) > abs(d_midC) && abs(d_plotC(i)) <= abs(d_endC)
            prob_finalC(i) = subs(prob_total2, d, d_plotC(i));
        else
            prob_finalC(i) = 0;
        end   
    end
    
    dist_plotC = abs(d_plotC)/sqrt(1 + (-1/m)^2);
    
    %Calculation of probability blockage #Simulation
%     prob_block_C1 = zeros(1,length(dist_LEDC1));
%     for ind = 1:length(dist_LEDC1)
%         if(dist_LEDC1(ind) ~= 0)
%             if(dist_LEDC1(ind) >= abs(d_startC) && dist_LEDC1(ind) <= abs(d_midC))
%               prob_block_C1(ind) = subs(prob_total1, d, dist_LEDC1(ind));  
%             elseif(dist_LEDC1(ind) >= abs(d_midC) && dist_LEDC1(ind) <= abs(d_endC))
%               prob_block_C1(ind) = subs(prob_total2, d, dist_LEDC1(ind));  
%             end
%         else
%             prob_block_C1(ind) = 0;
%         end
%     end
%     
%     prob_block_C2 = zeros(1,length(dist_LEDC2));
%     for ind = 1:length(dist_LEDC2)
%         if(dist_LEDC2(ind) ~= 0)
%             if(dist_LEDC2(ind) >= abs(d_startC) && dist_LEDC2(ind) <= abs(d_midC))
%               prob_block_C2(ind) = subs(prob_total1, d, dist_LEDC2(ind));  
%             elseif(dist_LEDC2(ind) >= abs(d_midC) && dist_LEDC2(ind) <= abs(d_endC))
%               prob_block_C2(ind) = subs(prob_total2, d, dist_LEDC2(ind));  
%             end
%         else
%             prob_block_C2(ind) = 0;
%         end
%     end
   
    
    
%4. LED (1.25, 3.75)__________________________________
elseif (p(led_ind) == 1.25 && q(led_ind) == 3.75)
    
    prob_left1 = integrate(x,y,pause_prob, AB_m, AB_c, AD_m, AD_c, Ax, Gx);
    prob_mid1 = integrate(x,y, pause_prob, EG_m, EG_c, AD_m, AD_c, Gx, Dx);
    prob_right1 = integrate(x,y, pause_prob, EG_m, EG_c, CD_m, CD_c, Dx, Ex);

    prob_total1 = prob_left1 + prob_mid1 + prob_right1;
    
    prob_left2 = integrate(x,y,pause_prob, AB_m, AB_c, AD_m, AD_c, Ax, Dx);
    prob_mid2 = integrate(x,y,pause_prob, AB_m, AB_c, CD_m, CD_c, Dx, Gx);
    prob_right2 = integrate(x,y,pause_prob, EG_m, EG_c, CD_m, CD_c, Gx, Ex);

    prob_total2 = prob_left2 + prob_mid2 + prob_right2;
    
    prob_totD = prob_total1 + prob_total2;
    
    dlD = sqrt((p(led_ind)-a)^2 + (q(led_ind)-b)^2)*(1 - 0.95/2.15);
    d_startD = -dlD*sqrt(1+(-1/m)^2); % -2.0651
    d_midD = Hy + Hx/m -p(led_ind)/m - q(led_ind); % -2.5567
    d_endD = b + a/m - p(led_ind)/m - q(led_ind); % -3.7

    d_plotD = (d_endD) : 0.001 : (d_startD);
    prob_finalD = zeros(1, length(d_plotD));

    for i = 1:length(d_plotD)
        if abs(d_plotD(i)) >= abs(d_startD) && abs(d_plotD(i)) <= abs(d_midD)
            prob_finalD(i) = subs(prob_total1, d, d_plotD(i));
        elseif abs(d_plotD(i)) > abs(d_midD) && abs(d_plotD(i)) <= abs(d_endD)
            prob_finalD(i) = subs(prob_total2, d, d_plotD(i));
        else
            prob_finalD(i) = 0;
        end   
    end
    
    dist_plotD = abs(d_plotD)/sqrt(1 + (-1/m)^2);
    
    %Calculation of probability blockage #Simulation
%     prob_block_D1 = zeros(1,length(dist_LEDD1));
%     for ind = 1:length(dist_LEDD1)
%         if(dist_LEDD1(ind) ~= 0)
%             if(dist_LEDD1(ind) >= abs(d_startD) && dist_LEDD1(ind) <= abs(d_midD))
%               prob_block_D1(ind) = subs(prob_total1, d, dist_LEDD1(ind));  
%             elseif(dist_LEDD1(ind) > abs(d_midD) && dist_LEDD1(ind) <= abs(d_endD))
%               prob_block_D1(ind) = subs(prob_total2, d, dist_LEDD1(ind));  
%             end
%         else
%             prob_block_D1(ind) = 0;
%         end
%     end
%     
%     prob_block_D2 = zeros(1,length(dist_LEDD2));
%     for ind = 1:length(dist_LEDD2)
%         if(dist_LEDD2(ind) ~= 0)
%             if(dist_LEDD2(ind) >= abs(d_startD) && dist_LEDD2(ind) <= abs(d_midD))
%               prob_block_D2(ind) = subs(prob_total1, d, dist_LEDD2(ind));  
%             elseif(dist_LEDD2(ind) >= abs(d_midD) && dist_LEDD2(ind) <= abs(d_endD))
%               prob_block_D2(ind) = subs(prob_total2, d, dist_LEDD2(ind));  
%             end
%         else
%             prob_block_D2(ind) = 0;
%         end
%     end


end %end if


end %end for


% p_desired = interp1(dist_plotA, prob_finalA, 1.6)


coord_PD = sprintf(' (%.2f, %.2f) ', a, b);
text_PD1 = sprintf(' Coordinate of PD: ');
text_PD = strcat(text_PD1, coord_PD);

figure(1);
subplot(2,2,3);
    plot(dist_plotA, prob_finalA, 'linewidth', 1.5);
    coord_LEDA = sprintf(' (%.2f, %.2f) ', p(1), q(1));
    text_LEDA = sprintf('Coordinate of LED: ');
    text_titleA1 = strcat(text_LEDA, coord_LEDA);
    text_titleA = strcat(text_titleA1, text_PD);
    title(text_titleA);
    xlabel('Distance from base of LED (in m)');
    ylabel('Blockage probability P_B(d)');
subplot(2,2,4);
    plot(dist_plotB, prob_finalB, 'linewidth', 1.5);
    coord_LEDB = sprintf(' (%.2f, %.2f) ', p(2), q(2));
    text_LEDB = sprintf('Coordinate of LED: ');
    text_titleB1 = strcat(text_LEDB, coord_LEDB);
    text_titleB = strcat(text_titleB1, text_PD);
    title(text_titleB);
    xlabel('Distance from base of LED (in m)');
    ylabel('Blockage probability P_B(d)');
subplot(2,2,2);
    plot(dist_plotC, prob_finalC, 'linewidth', 1.5);
    coord_LEDC = sprintf(' (%.2f, %.2f) ', p(3), q(3));
    text_LEDC = sprintf('Coordinate of LED: ');
    text_titleC1 = strcat(text_LEDC, coord_LEDC);
    text_titleC = strcat(text_titleC1, text_PD);
    title(text_titleC);
    xlabel('Distance from base of LED (in m)');
    ylabel('Blockage probability P_B(d)');
subplot(2,2,1);
    plot(dist_plotD, prob_finalD, 'linewidth', 1.5);
    coord_LEDD = sprintf(' (%.2f, %.2f) ', p(4), q(4));
    text_LEDD = sprintf('Coordinate of LED: ');
    text_titleD1 = strcat(text_LEDD, coord_LEDD);
    text_titleD = strcat(text_titleD1, text_PD);
    title(text_titleD);
    xlabel('Distance from base of LED (in m)');
    ylabel('Blockage probability P_B(d)');
    
prob_blockA1 = zeros(1, length(dist_LEDA1));    
for index = 1:length(dist_LEDA1)
    if (dist_LEDA1(index) ~= 0)
        prob_blockA1(index) = interp1(dist_plotA, prob_finalA, dist_LEDA1(index));
    else
        prob_blockA1(index) = 0;
    end
end

prob_blockB1 = zeros(1, length(dist_LEDB1));    
for index = 1:length(dist_LEDB1)
    if (dist_LEDB1(index) ~= 0)
        prob_blockB1(index) = interp1(dist_plotB, prob_finalB, dist_LEDB1(index));
    else
        prob_blockB1(index) = 0;
    end
end

prob_blockC1 = zeros(1, length(dist_LEDC1));    
for index = 1:length(dist_LEDC1)
    if (dist_LEDC1(index) ~= 0)
        prob_blockC1(index) = interp1(dist_plotC, prob_finalC, dist_LEDC1(index));
    else
        prob_blockC1(index) = 0;
    end
end

prob_blockD1 = zeros(1, length(dist_LEDD1));    
for index = 1:length(dist_LEDD1)
    if (dist_LEDD1(index) ~= 0)
        prob_blockD1(index) = interp1(dist_plotD, prob_finalD, dist_LEDD1(index));
    else
        prob_blockD1(index) = 0;
    end
end


prob_blockA2 = zeros(1, length(dist_LEDA2));    
for index = 1:length(dist_LEDA2)
    if (dist_LEDA2(index) ~= 0)
        prob_blockA2(index) = interp1(dist_plotA, prob_finalA, dist_LEDA2(index));
    else
        prob_blockA2(index) = 0;
    end
end

prob_blockB2 = zeros(1, length(dist_LEDB2));    
for index = 1:length(dist_LEDB2)
    if (dist_LEDB2(index) ~= 0)
        prob_blockB2(index) = interp1(dist_plotB, prob_finalB, dist_LEDB2(index));
    else
        prob_blockB2(index) = 0;
    end
end

prob_blockC2 = zeros(1, length(dist_LEDC2));    
for index = 1:length(dist_LEDC2)
    if (dist_LEDC2(index) ~= 0)
        prob_blockC2(index) = interp1(dist_plotC, prob_finalC, dist_LEDC2(index));
    else
        prob_blockC2(index) = 0;
    end
end

prob_blockD2 = zeros(1, length(dist_LEDD2));    
for index = 1:length(dist_LEDD2)
    if (dist_LEDD2(index) ~= 0)
        prob_blockD2(index) = interp1(dist_plotD, prob_finalD, dist_LEDD2(index));
    else
        prob_blockD2(index) = 0;
    end
end

if v == 1
    prob_blockA1(286:297) = 0;
    prob_blockB1(286:297) = 0;
    prob_blockC1(286:297) = 0;
    prob_blockD1(286:297) = 0;

elseif v == 1.5
    prob_blockA2(345:347) = 0;
    prob_blockB2(345:347) = 0;
    prob_blockC2(345:347) = 0;
    prob_blockD2(345:347) = 0;
end

prob_blockA = prob_blockA1 + prob_blockA2;
prob_blockB = prob_blockB1 + prob_blockB2;
prob_blockC = prob_blockC1 + prob_blockC2;
prob_blockD = prob_blockD1 + prob_blockD2;

%Power Calculation_________________________________________________________

theta =70;

I2 = 0.562; % Noise-bandwidth factor 
Rb = 115200; % Data rate (Bit per second)
Iamb = 7E-8; % Ambient light power (Ampere) %
R = 0.55; % Photodiode responsivity (A/W )%
q_c = 1.60E-19; % Electron charge (C)
% Amplifier bandwidth (Hz)%
Ba = 4.5E6;
% Amplifier noise density (Ampere/Hz^0.5)%
Iamf = 5e-12 ;
% semi-angle at half power
ml=-log10(2)/log10(cosd(theta)); %Lambertian order of emission
P_LED=20; %transmitted optical power by individual LED
nLED=60; % number of LED array nLED*nLED
P_total=nLED*nLED*P_LED; %Total transmitted power
Adet=10^-4; %detector physical area of a PD
Ts=1; %gain of an optical filter; ignore if no filter is used
index=1.5; %refractive index of a lens at a PD; ignore if no lens is used
FOV=70; %FOV of a receiver
G_Con=(index^2)/(sind(FOV).^2); %Gain of an optical concentrator; ignore if no lens is used

lx=5; ly=5; lz=3; %Room dimension
h=2.15; % dist b/w source and receiver plane

% [XT,YT]=meshgrid([lx/4 3*lx/4],[ly/4 3*ly/4]);
% Nx=lx*5; Ny=ly*5;
% x_coord = linspace(0,lx,Nx);
% y_coord = linspace(0,ly,Ny);
% [XR,YR] = meshgrid(x_coord,y_coord);
% D1 = sqrt((XR-XT(1,1)).^2+(YR-YT(1,1)).^2+h^2);
% D2 = sqrt((XR-XT(1,2)).^2+(YR-YT(1,2)).^2+h^2);
% D4 = sqrt((XR-XT(2,1)).^2+(YR-YT(2,1)).^2+h^2);
% D3 = sqrt((XR-XT(2,2)).^2+(YR-YT(2,2)).^2+h^2);

D1 = sqrt((p(1)-a)^2 + (q(1)-b)^2 + h^2);
D2 = sqrt((p(2)-a)^2 + (q(2)-b)^2 + h^2);
D3 = sqrt((p(3)-a)^2 + (q(3)-b)^2 + h^2);
D4 = sqrt((p(4)-a)^2 + (q(4)-b)^2 + h^2);

cosphi_A1=h./D1;
receiver_angle=acosd(cosphi_A1);

cosphi_A2=h./D2;
receiver_angle2=acosd(cosphi_A2);

cosphi_A3=h./D3;
receiver_angle3=acosd(cosphi_A3);

cosphi_A4=h./D4;
receiver_angle4=acosd(cosphi_A4);

H_A1=(ml+1)*Adet.*cosphi_A1.^(ml+1)./(2*pi.*D1.^2);
H_A2=(ml+1)*Adet.*cosphi_A2.^(ml+1)./(2*pi.*D2.^2);
H_A3=(ml+1)*Adet.*cosphi_A3.^(ml+1)./(2*pi.*D3.^2);
H_A4=(ml+1)*Adet.*cosphi_A4.^(ml+1)./(2*pi.*D4.^2);


H_A1_blockageA = H_A1.*(1-prob_blockA);
H_A1_blockageB = H_A2.*(1-prob_blockB);
H_A1_blockageC = H_A3.*(1-prob_blockC);
H_A1_blockageD = H_A4.*(1-prob_blockD);


P_rec_A1 = P_total.*H_A1_blockageA.*Ts.*G_Con;
P_rec_A2 = P_total.*H_A1_blockageB.*Ts.*G_Con;
P_rec_A3 = P_total.*H_A1_blockageC.*Ts.*G_Con;
P_rec_A4 = P_total.*H_A1_blockageD.*Ts.*G_Con;

P_rec_A1(abs(receiver_angle)>FOV)=0;
P_rec_A2(abs(receiver_angle2)>FOV)=0;
P_rec_A3(abs(receiver_angle3)>FOV)=0;
P_rec_A4(abs(receiver_angle4)>FOV)=0;
P_rec_total = P_rec_A1 + P_rec_A2 + P_rec_A3 + P_rec_A4;
P_rec_dBm=10*log10(P_rec_total);
Var_power = var(P_rec_dBm);

Bn = I2 * Rb; % Noise-bandwidth (Sec^-1)%
Pamb = Iamb / R; % Ambient light power (W) %
% Shot-noise variance ( Ampere^2 )%
omega_shot = 2 * q_c * R .* (P_rec_total + Pamb) * Bn; 
% Amplifier noise variance ( Ampere^2 )%
omega_amplifier = Iamf^2 * Ba; 
%Thermal noise variance
omega_thermal = (8*pi*295*112E-8*1E-3*.562*1E6*1.38E-23)+((16*pi^2*1.38E-23*295*1.5*(112E-8)^2*1E-8*.56281E12)/.03);
% Total noise variance ( Ampere^2 )%
omega_total = omega_amplifier + omega_shot+omega_thermal; 
% SNR %
SNR = (( R * P_rec_total ).^2)./ 10^-11;
SNRdB = 10*log10(SNR);

figure(2);
if v == 1
    plot(time_block2, P_rec_dBm, 'linewidth', 1.5);
elseif v == 1.5
    plot(time_block1, P_rec_dBm, 'linewidth', 1.5);
end
hold on;
xlabel('Time (s)'); ylabel('Power (dBm)');
title('Received Power (dBm), Simulation time = 10000s, Pause time = 100s');


function [prob_block] = integrate(x,y,pause_prob, m_min, c_min, m_max, c_max, x_min, x_max)
    ymin = m_min*x + c_min;
    ymax = m_max*x + c_max;
%     display(ymin);
%     display(ymax);
    fxy(x,y) = (pause_prob + (1-pause_prob)*(-6/5^3*y^2 + 6/5^2*y)*(-6/5^3*x^2 + 6/5^2*x));
   
    dy = int(fxy, y);
    dy1 = subs(dy, y, ymin);
    dy2 = subs(dy, y, ymax);
  
    fy = dy2 - dy1;
    
    dydx(x) = fy;
    
    dx = int(dydx);

    dx1 = subs(dx, x, x_min);
    dx2 = subs(dx, x, x_max);
    
    prob_block = dx2-dx1;
    
%     display(prob_block);

end

